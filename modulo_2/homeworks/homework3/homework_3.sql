--1 Right outer join entre pessoa e contato
SELECT * FROM PESSOA P RIGHT JOIN CONTATO C ON
P.ID_PESSOA = C.ID_PESSOA;

-- 2 Right outer join pessoa endereco_pessoa pessoa_pessoaXendereco
SELECT * FROM PESSOA_X_PESSOA_ENDERECO pxpe	 RIGHT JOIN 
ENDERECO_PESSOA ep ON pxpe.ID_ENDERECO = ep.ID_ENDERECO 
RIGHT JOIN PESSOA p ON pxpe.ID_PESSOA = p.ID_PESSOA 

--3 Todas as tabelas começando por pessoa Right outer join 
SELECT * FROM PESSOA p RIGHT JOIN CONTATO c ON p.ID_PESSOA = c.ID_PESSOA 
RIGHT OUTER JOIN PESSOA_X_PESSOA_ENDERECO pxpe ON c.ID_PESSOA = pxpe.ID_PESSOA 
RIGHT OUTER JOIN ENDERECO_PESSOA ep ON pxpe.ID_ENDERECO = ep.ID_ENDERECO 

--4 
SELECT * FROM PESSOA P FULL JOIN CONTATO C ON
P.ID_PESSOA = C.ID_PESSOA;

--5 
SELECT * FROM PESSOA_X_PESSOA_ENDERECO pxpe	 FULL JOIN 
ENDERECO_PESSOA ep ON pxpe.ID_ENDERECO = ep.ID_ENDERECO 
FULL OUTER JOIN PESSOA p ON pxpe.ID_PESSOA = p.ID_PESSOA 

--6 
SELECT * FROM PESSOA p FULL JOIN CONTATO c ON p.ID_PESSOA = c.ID_PESSOA 
FULL OUTER JOIN PESSOA_X_PESSOA_ENDERECO pxpe ON c.ID_PESSOA = pxpe.ID_PESSOA 
FULL OUTER JOIN ENDERECO_PESSOA ep ON pxpe.ID_ENDERECO = ep.ID_ENDERECO 

--7 ==== Para cada id de pessoa ele testa no exists 
-- caso a condição não seja atendida ele retorna falso e não faz
-- a query do respectivo elemento acima.
SELECT 
	P.NOME, P.CPF 
	FROM PESSOA P
WHERE EXISTS 
(
	SELECT 1 FROM PESSOA_X_PESSOA_ENDERECO pxpe 
	WHERE P.ID_PESSOA = pxpe.ID_PESSOA
);
	
-- =================== Scripts para modelo do projeto ================
 
CREATE TABLE RECEITA (
	ID_RECEITA 		NUMBER (38,0) PRIMARY KEY NOT NULL,
	NOME_RECEITA 	VARCHAR2(100) NOT NULL,
	TIPO_RECEITA 	VARCHAR2 (40) NOT NULL,
	CALORIAS 		NUMBER (5,0) NOT NULL,
	MODO_PREPARO 	VARCHAR (2000) NOT NULL,
	TEMPO_PREPARO	NUMBER (5,0) NOT NULL,
	MEDIA_PRECO		NUMBER (10,2) NOT NULL,
	TIPO_REFEICAO	VARCHAR2(40) NOT NULL
)

CREATE TABLE INGREDIENTE (
	ID_INGREDIENTE 	NUMBER (38,0) PRIMARY KEY NOT NULL,
	ID_RECEITA 		NUMBER (38,0) NOT NULL,
	NOME 			VARCHAR2(100) NOT NULL,
	QUANTIDADE		NUMBER(4,0) NOT NULL,
	UNIDADE_MEDIDA	CHAR(2) NOT NULL,
	CONSTRAINT FK_ING_RECEITA_CID_RECEITA FOREIGN KEY (ID_RECEITA) REFERENCES RECEITA (ID_RECEITA)
)

CREATE SEQUENCE SEQ_RECEITA
START WITH 1
INCREMENT BY 1
NOCACHE NOCYCLE;

CREATE SEQUENCE SEQ_INGREDIENTE
START WITH 1
INCREMENT BY 1
NOCACHE NOCYCLE;

INSERT INTO RECEITA 
(ID_RECEITA, NOME_RECEITA, TIPO_RECEITA, CALORIAS, MODO_PREPARO
, TEMPO_PREPARO, MEDIA_PRECO, TIPO_REFEICAO) VALUES 
(SEQ_RECEITA.nextval, 'Pão com ovo', 'Diet', 345, 'preparar um pão', 32, 12.3, 'Café')

INSERT INTO RECEITA 
(ID_RECEITA, NOME_RECEITA, TIPO_RECEITA, CALORIAS, MODO_PREPARO
, TEMPO_PREPARO, MEDIA_PRECO, TIPO_REFEICAO) VALUES 
(SEQ_RECEITA.nextval, 'Camarão ao alho e óleo', 'Vegetariana', 1000, 'preparar um camarão'
, 123, 32.54, 'Almoço')

INSERT INTO INGREDIENTE (ID_INGREDIENTE, ID_RECEITA, NOME, QUANTIDADE, UNIDADE_MEDIDA)
VALUES (SEQ_INGREDIENTE.nextval, 1, 'ovo', 2, 'un');

SELECT * FROM INGREDIENTE;
